// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

enum Role {
  USER
  ADMIN
  MOD
}

enum PaymentStatus {
  succeeded
  pending
  failed
}

enum NivelIngles {
  inicial
  basico
  intermedio
  avanzado
}

model User {
  id                 String              @id @default(auto()) @map("_id") @db.ObjectId
  email              String              @unique
  name               String
  image              String?
  role               Role                @default(USER)
  localidad          String?
  telefono           Int?
  nivel              NivelIngles         @default(inicial)
  status             Boolean             @default(false)
  newsletter         String              @default("no")
  billingMercadoPago billingMercadoPago?
  createdAt          DateTime            @default(now())
  updatedAt          DateTime            @updatedAt
}

model WorkExperience {
  id          String    @id @default(auto()) @map("_id") @db.ObjectId
  position    String?
  company     String?
  startDate   DateTime?
  endDate     DateTime?
  description String?
  resumeId    String    @db.ObjectId
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}

model billingMercadoPago {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  userId    String   @unique @db.ObjectId
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
